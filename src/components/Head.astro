---
import { ViewTransitions } from "astro:transitions";

import { withBase } from "~/utils";

interface Props {
	description: string;
	image: string;
	title: string | undefined;
}

const { description, image: imageRaw, title } = Astro.props;
const image = new URL(imageRaw, Astro.site);
const keywords = [
	"engineer",
	"developer",
	"javascript",
	"hatem mnaouer",
	"open source",
	"performance",
	"react",
	"typescript",
	"rust",
];

const metaPairs = [
	{
		content: description,
		name: `description`,
	},
	{
		content: keywords.join(),
		name: `keywords`,
	},
	{
		content: title,
		property: `og:title`,
	},
	{
		content: description,
		property: `og:description`,
	},
	{
		content: image,
		property: `og:image`,
	},
	{
		content: image,
		property: `og:image:secure_url`,
	},
	{
		content: `website`,
		property: `og:type`,
	},
	{
		content: Astro.url,
		property: `og:url`,
	},
	{
		content: image,
		name: `thumbnail`,
	},
	{
		content: Astro.site,
		name: `twitter:domain`,
	},
];
---

<head>
	<meta charset="utf-8" />
	<link
		href={withBase("/letter-h.svg")}
		media="(prefers-color-scheme: light)"
		rel="icon"
		type="image/svg+xml"
	/>
	<link href="/sitemap-index.xml" rel="sitemap" />
	<!-- delete this crap -->
	<link
		href="/rss.xml"
		rel="alternate"
		title="RSS Feed"
		type="application/rss+xml"
	/>
	{metaPairs.map((meta) => <meta {...meta} />)}
	<meta content={description} name="description" />
	<meta content={keywords.join()} name="keywords" />
	<meta content={Astro.generator} name="generator" />
	<meta content="width=device-width" name="viewport" />
	<title>{title}</title>
</head>

<ViewTransitions />
